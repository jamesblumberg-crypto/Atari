mads 2.1.7
Source: main.asm
     1 				; EdVenture - An Adventure in Atari 8-Bit Assembly
     2 				; github.com/edsalisbury/edventure
     3 				; Mission: EdPossible
     4 				; youtube.com/MissionEdPossible
     5 				; Assemble in MADS: mads -l -t main.asm
     6 				; Episode 11: Scrolling
     7
     8 				; ATASCII Table: https://www.atariwiki.org/wiki/attach/Atari%20ATASCII%20Table/ascii_atascii_table.pdf
     9 				; ATASCII 0-31 Screen code 64-95
    10 				; ATASCII 32-95 Screen code 0-63
    11 				; ATASCII 96-127 Screen code 96-127
    12
    13 				; NTSC Color Palette: https://atariage.com/forums/uploads/monthly_10_2015/post-6369-0-47505700-1443889945.png
    14 				; PAL Color Palette: https://atariage.com/forums/uploads/monthly_10_2015/post-6369-0-90255700-1443889950.png
    15 				; PMG Memory Map: https://www.atarimagazines.com/compute/issue64/atari_animation.gif
    16
    17 					org $2000
    18
    19 = 3000			map     	= $3000 ; Map
    20 = 4000			charset 	= $4000 ; Character Set
    21 = 5000			pmg     	= $5000 ; Player Missle Data
    22 = 6000			screen  	= $6000 ; Screen buffer
    23
    24 = 0001			stick_up    = %0001
    25 = 0002			stick_down  = %0010 
    26 = 0004			stick_left  = %0100
    27 = 0008			stick_right = %1000
    28
    29 = 0092			map_ptr 	= $92
    30 = 0094			screen_ptr 	= $94
    31 = 0096			player_x	= $96
    32 = 0097			player_y	= $97
    33 = 0098			tmp			= $98
    34 = 009A			up_tile		= $9a
    35 = 009B			down_tile	= $9b
    36 = 009C			left_tile	= $9c
    37 = 009D			right_tile	= $9d
    38 = 009E			on_tile		= $9e
    39
    40 = 0028			screen_char_width = 40
    41 = 0013			screen_width = 19
    42 = 000B			screen_height = 11
    43 = 0031			map_width = 49
    44 = 0031			map_height = 49
    45
    46 FFFF> 2000-25FD> A9 10		lda #16
    47 2002 85 96			sta player_x
    48 2004 85 97			sta player_y
    49
    50 2006 20 BF 25			setup_screen()
    51 2009 20 A1 20			setup_colors()
    52 200C A9 40 8D F4 02		mva #>charset CHBAS
    53 2011 20 CF 20			clear_pmg()
    54 2014 20 E3 20			load_pmg()
    55 2017 20 03 21			setup_pmg()
    56
    57 201A			game
    58 201A 20 23 20			read_joystick()
    59 201D 20 66 21			blit_screen()
    60 2020 4C 1A 20			jmp game
    61
    62 2023			.proc read_joystick
    63 2023 AD 78 02			lda STICK0
    64 2026 29 01			and #stick_up
    65 2028 F0 18			beq move_up
    66
    67 202A AD 78 02			lda STICK0
    68 202D 29 02			and #stick_down
    69 202F F0 26			beq move_down
    70
    71 2031 AD 78 02			lda STICK0
    72 2034 29 04			and #stick_left
    73 2036 F0 34			beq move_left
    74
    75 2038 AD 78 02			lda STICK0
    76 203B 29 08			and #stick_right
    77 203D F0 42			beq move_right
    78
    79 203F 4C 96 20			jmp done
    80
    81 2042			move_up
    82 2042 A5 9A			lda up_tile
    83 2044 C9 01			cmp #1
    84 2046 F0 4E			beq done
    85 					delay #5
    85 				 LDX# 5\ JSR DELAY
    85 2048 A2 05		 LDX# 5
    85 204A 20 97 20		 JSR DELAY
    86 204D A5 97			lda player_y
    87 204F 38 E9 01			sub #1
    88 2052 85 97			sta player_y
    89 2054 4C 96 20			jmp done
    90
    91 2057			move_down
    92 2057 A5 9B			lda down_tile
    93 2059 C9 01			cmp #1
    94 205B F0 39			beq done
    95 					delay #5
    95 				 LDX# 5\ JSR DELAY
    95 205D A2 05		 LDX# 5
    95 205F 20 97 20		 JSR DELAY
    96 2062 A5 97			lda player_y
    97 2064 18 69 01			add #1
    98 2067 85 97			sta player_y
    99 2069 4C 96 20			jmp done
   100
   101 206C			move_left
   102 206C A5 9C			lda left_tile
   103 206E C9 01			cmp #1
   104 2070 F0 24			beq done
   105 					delay #5
   105 				 LDX# 5\ JSR DELAY
   105 2072 A2 05		 LDX# 5
   105 2074 20 97 20		 JSR DELAY
   106 2077 A5 96			lda player_x
   107 2079 38 E9 01			sub #1
   108 207C 85 96			sta player_x
   109 207E 4C 96 20			jmp done
   110
   111 2081			move_right
   112 2081 A5 9D			lda right_tile
   113 2083 C9 01			cmp #1
   114 2085 F0 0F			beq done
   115 					delay #5
   115 				 LDX# 5\ JSR DELAY
   115 2087 A2 05		 LDX# 5
   115 2089 20 97 20		 JSR DELAY
   116 208C A5 96			lda player_x
   117 208E 18 69 01			add #1
   118 2091 85 96			sta player_x
   119 2093 4C 96 20			jmp done
   120
   121 2096			done
   122 2096 60				rts
   123 					.endp
   124
   125 				* --------------------------------------- *
   126 				* Proc: delay                             *
   127 				* Uses Real-time clock to delay x/60 secs *
   128 				* --------------------------------------- *
   129 2097			.proc delay (.byte x) .reg
   130 2097			start
   131 2097 A5 14			lda RTCLK2
   132 2099			wait
   133 2099 C5 14			cmp RTCLK2
   134 209B F0 FC			beq wait
   135
   136 209D CA				dex
   137 209E D0 F7			bne start
   138
   139 20A0 60				rts
   140 					.endp
   141
   142 				* --------------------------------------- *
   143 				* Proc: setup_colors                      *
   144 				* Sets up colors                          *
   145 				* --------------------------------------- *
   146 20A1			.proc setup_colors
   147 = 0006			med_gray = $06
   148 = 000A			lt_gray = $0a
   149 = 00C2			green = $c2
   150 = 0022			brown = $22
   151 = 0000			black = $00
   152 = 002C			peach = $2c
   153 = 0080			blue = $80
   154
   155 					; Character Set Colors
   156 20A1 A9 06 8D C4 02		mva #med_gray COLOR0 ; %01
   157 20A6 A9 0A 8D C5 02		mva #lt_gray COLOR1  ; %10
   158 20AB A9 C2 8D C6 02		mva #green COLOR2	 ; %11
   159 20B0 A9 22 8D C7 02		mva #brown COLOR3    ; %11 (inverse)
   160 20B5 A9 00 8D C8 02		mva #black COLOR4    ; %00
   161
   162 					; Player-Missile Colors
   163 20BA A9 22 8D C0 02		mva #brown PCOLR0
   164 20BF A9 2C 8D C1 02		mva #peach PCOLR1
   165 20C4 A9 80 8D C2 02		mva #blue PCOLR2
   166 20C9 A9 00 8D C3 02		mva #black PCOLR3
   167
   168 20CE 60				rts
   169 					.endp
   170
   171 				* --------------------------------------- *
   172 				* Proc: clear_pmg                         *
   173 				* Clears memory for Player-Missile Gfx    *
   174 				* --------------------------------------- *
   175 20CF			.proc clear_pmg
   176 = 5200			pmg_p0 = pmg + $200
   177 = 5280			pmg_p1 = pmg + $280
   178 = 5300			pmg_p2 = pmg + $300
   179 = 5380			pmg_p3 = pmg + $380
   180
   181 20CF A2 80			ldx #$80
   182 20D1 A9 00			lda #0
   183 20D3			loop
   184 20D3 CA				dex
   185 20D4 9D 00 52			sta pmg_p0,x
   186 20D7 9D 80 52			sta pmg_p1,x
   187 20DA 9D 00 53			sta pmg_p2,x
   188 20DD 9D 80 53			sta pmg_p3,x
   189 20E0 D0 F1			bne loop
   190 20E2 60				rts
   191 					.endp
   192
   193 				* --------------------------------------- *
   194 				* Proc: load_pmg                          *
   195 				* Load PMG Graphics                       *
   196 				* --------------------------------------- *
   197 20E3			.proc load_pmg
   198 = 5200			pmg_p0 = pmg + $200
   199 = 5280			pmg_p1 = pmg + $280
   200 = 5300			pmg_p2 = pmg + $300
   201 = 5380			pmg_p3 = pmg + $380
   202
   203 20E3 A2 00			ldx #0
   204 20E5			loop
   205 20E5 BD DE 25 9D 40 52		mva pmgdata,x pmg_p0+64,x
   206 20EB BD E6 25 9D C0 52		mva pmgdata+8,x pmg_p1+64,x
   207 20F1 BD EE 25 9D 40 53		mva pmgdata+16,x pmg_p2+64,x
   208 20F7 BD F6 25 9D C0 53		mva pmgdata+24,x pmg_p3+64,x
   209 20FD E8				inx
   210 20FE E0 08			cpx #8
   211 2100 D0 E3			bne loop
   212 2102 60				rts
   213 					.endp
   214
   215 				* --------------------------------------- *
   216 				* Proc: setup_pmg                         *
   217 				* Sets up Player-Missile Graphics System  *
   218 				* --------------------------------------- *
   219 2103			.proc setup_pmg
   220 2103 A9 50 8D 07 D4		mva #>pmg PMBASE
   221 2108 A9 2E 8D 2F 02		mva #46 SDMCTL ; Single Line resolution
   222 210D A9 03 8D 1D D0		mva #3 GRACTL  ; Enable PMG
   223 2112 A9 01 8D 6F 02		mva #1 GRPRIOR ; Give players priority
   224 2117 A9 78			lda #120
   225 2119 8D 00 D0			sta HPOSP0
   226 211C 8D 01 D0			sta HPOSP1
   227 211F 8D 02 D0			sta HPOSP2
   228 2122 8D 03 D0			sta HPOSP3
   229 2125 60				rts
   230 					.endp
   231
   232 				.macro blit_tile
   233 					lda (map_ptr),y			; Load the tile from the map
   234 					asl						; Multiply by two to get left character
   235 					sta (screen_ptr),y		; Store the left character
   236 					inc screen_ptr			; Advance the screen pointer
   237 					add #1					; Add one to get right character
   238 					sta (screen_ptr),y		; Store the right character
   239 					adw map_ptr #1			; Advance the map pointer
   240 					adw screen_ptr #1		; Advance the screen pointer	
   241 					.endm
   242
   243 				.macro blit_circle_line body, map_space, screen_space
   244 					adw map_ptr #:map_space
   245 					adw screen_ptr #:screen_space
   246 					ldx #:body
   247 				loop
   248 					blit_tile()
   249 					dex
   250 					bne loop
   251 				
   252 					adw map_ptr #:map_space
   253 					adw map_ptr #(map_width - screen_width)
   254 					adw screen_ptr #:screen_space
   255 					adw screen_ptr #(screen_char_width - screen_width * 2)
   256 					.endm
   257
   258 2126			.proc map_offset
   259 2126 A9 00 85 92 A9 30 + 	mwa #map map_ptr
   260 212E A9 00 85 94 A9 60 + 	mwa #screen screen_ptr
   261
   262 					; Shift vertically for player's y position
   263 2136 A5 97			lda player_y
   264 2138 38 E9 05			sub #(screen_height / 2)
   265 213B 38 E9 01			sub #1
   266 213E A8				tay
   267 213F			loop
   268 213F 18 A5 92 69 31 85 + 	adw map_ptr #map_width
   269 214A 88				dey
   270 214B D0 F2			bne loop
   271
   272 					; Shift horizontally for player's x position
   273 214D A5 96			lda player_x
   274 214F 38 E9 09			sub #(screen_width / 2)
   275 2152 85 98			sta tmp
   276 2154 A9 00			lda #0
   277 2156 85 99			sta tmp + 1
   278 2158 18 A5 92 65 98 85 + 	adw map_ptr tmp
   279
   280 2165 60				rts
   281 					.endp
   282
   283 2166			.proc blit_screen
   284 2166 20 26 21			map_offset()
   285
   286 2169 A0 00			ldy #0
   287
   288 					; 2 Blank lines
   289 216B 18 A5 94 69 50 85 + 	adw screen_ptr #(screen_char_width * 2)
   290 2176 18 A5 92 69 62 85 + 	adw map_ptr #(map_width * 2)
   291 					
   292 					; Top 3 lines of the circle
   293 2181				blit_circle_line 5, 7, 14
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 2181 18 A5 92 69 07 85 + 	adw map_ptr #7
     2 218C 18 A5 94 69 0E 85 + 	adw screen_ptr #14
     3 2197 A2 05			ldx #5
     4 2199			loop
     1 2199 B1 92			lda (map_ptr),y			; Load the tile from the map
     2 219B 0A				asl						; Multiply by two to get left character
     3 219C 91 94			sta (screen_ptr),y		; Store the left character
     4 219E E6 94			inc screen_ptr			; Advance the screen pointer
     5 21A0 18 69 01			add #1					; Add one to get right character
     6 21A3 91 94			sta (screen_ptr),y		; Store the right character
     7 21A5 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 21B0 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 21BB CA				dex
     7 21BC D0 DB			bne loop
     9 21BE 18 A5 92 69 07 85 + 	adw map_ptr #7
    10 21C9 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 21D4 18 A5 94 69 0E 85 + 	adw screen_ptr #14
    12 21DF 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   294 21EA				blit_circle_line 7, 6, 12
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 21EA 18 A5 92 69 06 85 + 	adw map_ptr #6
     2 21F5 18 A5 94 69 0C 85 + 	adw screen_ptr #12
     3 2200 A2 07			ldx #7
     4 2202			loop
     1 2202 B1 92			lda (map_ptr),y			; Load the tile from the map
     2 2204 0A				asl						; Multiply by two to get left character
     3 2205 91 94			sta (screen_ptr),y		; Store the left character
     4 2207 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2209 18 69 01			add #1					; Add one to get right character
     6 220C 91 94			sta (screen_ptr),y		; Store the right character
     7 220E 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2219 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 2224 CA				dex
     7 2225 D0 DB			bne loop
     9 2227 18 A5 92 69 06 85 + 	adw map_ptr #6
    10 2232 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 223D 18 A5 94 69 0C 85 + 	adw screen_ptr #12
    12 2248 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   295 2253				blit_circle_line 9, 5, 10
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 2253 18 A5 92 69 05 85 + 	adw map_ptr #5
     2 225E 18 A5 94 69 0A 85 + 	adw screen_ptr #10
     3 2269 A2 09			ldx #9
     4 226B			loop
     1 226B B1 92			lda (map_ptr),y			; Load the tile from the map
     2 226D 0A				asl						; Multiply by two to get left character
     3 226E 91 94			sta (screen_ptr),y		; Store the left character
     4 2270 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2272 18 69 01			add #1					; Add one to get right character
     6 2275 91 94			sta (screen_ptr),y		; Store the right character
     7 2277 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2282 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 228D CA				dex
     7 228E D0 DB			bne loop
     9 2290 18 A5 92 69 05 85 + 	adw map_ptr #5
    10 229B 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 22A6 18 A5 94 69 0A 85 + 	adw screen_ptr #10
    12 22B1 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   296
   297 					; Line above the player
   298 22BC 18 A5 92 69 09 85 + 	adw map_ptr #9				; Advance to the tile above the player
   299 22C7 B1 92			lda (map_ptr),y				; Load in the tile
   300 22C9 85 9A			sta up_tile					; Store the tile
   301 22CB 38 A5 92 E9 09 85 + 	sbw map_ptr #9				; Undo math
   302 22D6				blit_circle_line 9, 5, 10
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 22D6 18 A5 92 69 05 85 + 	adw map_ptr #5
     2 22E1 18 A5 94 69 0A 85 + 	adw screen_ptr #10
     3 22EC A2 09			ldx #9
     4 22EE			loop
     1 22EE B1 92			lda (map_ptr),y			; Load the tile from the map
     2 22F0 0A				asl						; Multiply by two to get left character
     3 22F1 91 94			sta (screen_ptr),y		; Store the left character
     4 22F3 E6 94			inc screen_ptr			; Advance the screen pointer
     5 22F5 18 69 01			add #1					; Add one to get right character
     6 22F8 91 94			sta (screen_ptr),y		; Store the right character
     7 22FA 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2305 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 2310 CA				dex
     7 2311 D0 DB			bne loop
     9 2313 18 A5 92 69 05 85 + 	adw map_ptr #5
    10 231E 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 2329 18 A5 94 69 0A 85 + 	adw screen_ptr #10
    12 2334 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   303
   304 233F 18 A5 92 69 08 85 + 	adw map_ptr #8				; Advance to the tile to the left of the player
   305 234A B1 92			lda (map_ptr),y				; Load in the tile
   306 234C 85 9C			sta left_tile				; Store the tile
   307 234E 18 A5 92 69 01 85 + 	adw map_ptr #1				; Advance to the tile that the player is on
   308 2359 B1 92			lda (map_ptr),y				; Load in the tile
   309 235B 85 9E			sta on_tile					; Store the tile
   310 235D 18 A5 92 69 01 85 + 	adw map_ptr #1				; Advance to the tile to the right of the player
   311 2368 B1 92			lda (map_ptr),y				; Load in the tile
   312 236A 85 9D			sta right_tile				; Store the tile
   313 236C 38 A5 92 E9 0A 85 + 	sbw map_ptr #10				; Undo math
   314 2377				blit_circle_line 9, 5, 10
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 2377 18 A5 92 69 05 85 + 	adw map_ptr #5
     2 2382 18 A5 94 69 0A 85 + 	adw screen_ptr #10
     3 238D A2 09			ldx #9
     4 238F			loop
     1 238F B1 92			lda (map_ptr),y			; Load the tile from the map
     2 2391 0A				asl						; Multiply by two to get left character
     3 2392 91 94			sta (screen_ptr),y		; Store the left character
     4 2394 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2396 18 69 01			add #1					; Add one to get right character
     6 2399 91 94			sta (screen_ptr),y		; Store the right character
     7 239B 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 23A6 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 23B1 CA				dex
     7 23B2 D0 DB			bne loop
     9 23B4 18 A5 92 69 05 85 + 	adw map_ptr #5
    10 23BF 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 23CA 18 A5 94 69 0A 85 + 	adw screen_ptr #10
    12 23D5 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   315
   316 					; Line below the player
   317 23E0 18 A5 92 69 09 85 + 	adw map_ptr #9				; Advance to the tile below the player
   318 23EB B1 92			lda (map_ptr),y				; Load in the tile
   319 23ED 85 9B			sta down_tile				; Store the tile
   320 23EF 38 A5 92 E9 09 85 + 	sbw map_ptr #9				; Undo math
   321 23FA				blit_circle_line 9, 5, 10
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 23FA 18 A5 92 69 05 85 + 	adw map_ptr #5
     2 2405 18 A5 94 69 0A 85 + 	adw screen_ptr #10
     3 2410 A2 09			ldx #9
     4 2412			loop
     1 2412 B1 92			lda (map_ptr),y			; Load the tile from the map
     2 2414 0A				asl						; Multiply by two to get left character
     3 2415 91 94			sta (screen_ptr),y		; Store the left character
     4 2417 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2419 18 69 01			add #1					; Add one to get right character
     6 241C 91 94			sta (screen_ptr),y		; Store the right character
     7 241E 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2429 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 2434 CA				dex
     7 2435 D0 DB			bne loop
     9 2437 18 A5 92 69 05 85 + 	adw map_ptr #5
    10 2442 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 244D 18 A5 94 69 0A 85 + 	adw screen_ptr #10
    12 2458 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   322 					
   323 					; Bottom 3 lines of the circle
   324 2463				blit_circle_line 9, 5, 10
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 2463 18 A5 92 69 05 85 + 	adw map_ptr #5
     2 246E 18 A5 94 69 0A 85 + 	adw screen_ptr #10
     3 2479 A2 09			ldx #9
     4 247B			loop
     1 247B B1 92			lda (map_ptr),y			; Load the tile from the map
     2 247D 0A				asl						; Multiply by two to get left character
     3 247E 91 94			sta (screen_ptr),y		; Store the left character
     4 2480 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2482 18 69 01			add #1					; Add one to get right character
     6 2485 91 94			sta (screen_ptr),y		; Store the right character
     7 2487 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2492 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 249D CA				dex
     7 249E D0 DB			bne loop
     9 24A0 18 A5 92 69 05 85 + 	adw map_ptr #5
    10 24AB 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 24B6 18 A5 94 69 0A 85 + 	adw screen_ptr #10
    12 24C1 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   325 24CC				blit_circle_line 7, 6, 12
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 24CC 18 A5 92 69 06 85 + 	adw map_ptr #6
     2 24D7 18 A5 94 69 0C 85 + 	adw screen_ptr #12
     3 24E2 A2 07			ldx #7
     4 24E4			loop
     1 24E4 B1 92			lda (map_ptr),y			; Load the tile from the map
     2 24E6 0A				asl						; Multiply by two to get left character
     3 24E7 91 94			sta (screen_ptr),y		; Store the left character
     4 24E9 E6 94			inc screen_ptr			; Advance the screen pointer
     5 24EB 18 69 01			add #1					; Add one to get right character
     6 24EE 91 94			sta (screen_ptr),y		; Store the right character
     7 24F0 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 24FB 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 2506 CA				dex
     7 2507 D0 DB			bne loop
     9 2509 18 A5 92 69 06 85 + 	adw map_ptr #6
    10 2514 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 251F 18 A5 94 69 0C 85 + 	adw screen_ptr #12
    12 252A 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   326 2535				blit_circle_line 5, 7, 14
Macro: BLIT_CIRCLE_LINE [Source: main.asm]
     1 2535 18 A5 92 69 07 85 + 	adw map_ptr #7
     2 2540 18 A5 94 69 0E 85 + 	adw screen_ptr #14
     3 254B A2 05			ldx #5
     4 254D			loop
     1 254D B1 92			lda (map_ptr),y			; Load the tile from the map
     2 254F 0A				asl						; Multiply by two to get left character
     3 2550 91 94			sta (screen_ptr),y		; Store the left character
     4 2552 E6 94			inc screen_ptr			; Advance the screen pointer
     5 2554 18 69 01			add #1					; Add one to get right character
     6 2557 91 94			sta (screen_ptr),y		; Store the right character
     7 2559 18 A5 92 69 01 85 + 	adw map_ptr #1			; Advance the map pointer
     8 2564 18 A5 94 69 01 85 + 	adw screen_ptr #1		; Advance the screen pointer	
Source: main.asm
     6 256F CA				dex
     7 2570 D0 DB			bne loop
     9 2572 18 A5 92 69 07 85 + 	adw map_ptr #7
    10 257D 18 A5 92 69 1E 85 + 	adw map_ptr #(map_width - screen_width)
    11 2588 18 A5 94 69 0E 85 + 	adw screen_ptr #14
    12 2593 18 A5 94 69 02 85 + 	adw screen_ptr #(screen_char_width - screen_width * 2)
Source: main.asm
   327 259E 60				rts
   328 				.endp
   329
   330
   331 				* --------------------------------------- *
   332 				* Proc: copy_map_to_screen                *
   333 				* Copies map to screen with interpolation *
   334 				* --------------------------------------- *
   335 259F			.proc copy_map_to_screen
   336
   337
   338
   339
   340 259F A0 00			ldy #0
   341 25A1			loop
   342 25A1 B1 92			lda (map_ptr),y
   343 25A3 0A				asl
   344 25A4 91 94			sta (screen_ptr),y
   345
   346 25A6 E6 94			inc screen_ptr
   347 25A8 D0 02			bne next
   348 25AA E6 95			inc screen_ptr+1
   349
   350 25AC			next
   351 25AC 18 69 01			add #1
   352 25AF 91 94			sta (screen_ptr),y
   353 25B1 C8				iny
   354 25B2 D0 ED			bne loop
   355
   356 25B4 E6 93			inc map_ptr+1
   357 25B6 E6 95			inc screen_ptr+1
   358
   359 25B8 A5 93			lda map_ptr+1
   360 25BA C9 40			cmp #>(map + $1000)
   361 25BC D0 E3			bne loop
   362
   363 25BE 60				rts
   364 					.endp
   365
   366 25BF				icl 'hardware.asm'
Source: hardware.asm
     1 = 0230			SDLSTL = $0230  ; Display list starting address
     2 = 02F4			CHBAS  = $02f4  ; CHaracter BAse Register
     3 = 02C4			COLOR0 = $02c4	; Color for %01
     4 = 02C5			COLOR1 = $02c5  ; Color for %10
     5 = 02C6			COLOR2 = $02c6  ; Color for %11 (normal)
     6 = 02C7			COLOR3 = $02c7  ; Color for %11 (inverse)
     7 = 02C8			COLOR4 = $02c8  ; Color for %00 (background)
     8 = 02C0			PCOLR0 = $2C0 	; Color for Player-Missile 0
     9 = 02C1			PCOLR1 = $2C1 	; Color for Player-Missile 1
    10 = 02C2			PCOLR2 = $2C2 	; Color for Player-Missile 2
    11 = 02C3			PCOLR3 = $2C3 	; Color for Player-Missile 3
    12 = D01D			GRACTL = $D01D  ; Enable/disable PMG
    13 = D407			PMBASE = $D407  ; Player Missile Graphics Base address
    14 = 026F			GRPRIOR = $26F  ; Player-Missile Priority
    15 = 022F			SDMCTL = $22F   ; PM Resolution 46 ($2E) = double line resolution
    16 = D000			HPOSP0 = $D000  ; Horizontal position of player 0
    17 = D001			HPOSP1 = $D001  ; Horizontal position of player 1
    18 = D002			HPOSP2 = $D002  ; Horizontal position of player 2
    19 = D003			HPOSP3 = $D003  ; Horizontal position of player 3
    20 = 0278			STICK0 = $0278  ; Joystick 0
    21 = 0284			STRIG0 = $0284  ; Joystick 0 trigger
    22 = 0012			RTCLOK = $0012  ; Real Time Clock
    23 = 0012			RTCLK0 = $0012  ; Real Time Clock low byte
    24 = 0013			RTCLK1 = $0013  ; Real Time Clock high byte 
    25 = 0014			RTCLK2 = $0014  ; Real Time Clock control byte
   367 25BF				icl 'dlist.asm'
Source: dlist.asm
     1 				* --------------------------------------- *
     2 				* Proc: setup_screen                      *
     3 				* Sets up the display list for the screen *
     4 				* --------------------------------------- *
     5 25BF			.proc setup_screen
     6 = 0070			blank8 = $70    ; 8 blank lines
     7 = 0040			lms = $40	    ; Load Memory Scan
     8 = 0041			jvb = $41	    ; Jump while vertical blank
     9
    10 = 0002			antic2 = 2      ; Antic mode 2
    11 = 0005			antic5 = 5	    ; Antic mode 5
    12
    13 25BF A9 CA 8D 30 02 A9 + 	mwa #dlist SDLSTL
    14 25C9 60				rts
    15
    16 25CA			dlist
    17 25CA 70 70 70			.byte blank8, blank8, blank8
    18 25CD 45 00 60			.byte antic5 + lms, <screen, >screen
    19 25D0 05 05 05 05 05		.byte antic5, antic5, antic5, antic5, antic5
    20 25D5 05 05 05 05 05 05		.byte antic5, antic5, antic5, antic5, antic5, antic5
    21 25DB 41 CA 25			.byte jvb, <dlist, >dlist
    22 					.endp
   368 25DE				icl 'pmgdata.asm'
Source: pmgdata.asm
     1 25DE			pmgdata
     2 					; PCOLR0 (Brown)
     3 25DE 3C				.byte %00111100
     4 25DF 40				.byte %01000000
     5 25E0 40				.byte %01000000
     6 25E1 00				.byte %00000000
     7 25E2 00				.byte %00000000
     8 25E3 00				.byte %00000000
     9 25E4 00				.byte %00000000
    10 25E5 00				.byte %00000000
    11
    12 					; PCOLR1 (Peach)
    13 25E6 00				.byte %00000000
    14 25E7 3C				.byte %00111100
    15 25E8 28				.byte %00101000
    16 25E9 3C				.byte %00111100
    17 25EA 00				.byte %00000000
    18 25EB 81				.byte %10000001
    19 25EC 00				.byte %00000000
    20 25ED 00				.byte %00000000
    21
    22 					; PCOLR2 (Blue)
    23 25EE 00				.byte %00000000
    24 25EF 00				.byte %00000000
    25 25F0 00				.byte %00000000
    26 25F1 00				.byte %00000000
    27 25F2 7E				.byte %01111110
    28 25F3 3C				.byte %00111100
    29 25F4 24				.byte %00100100
    30 25F5 00				.byte %00000000
    31
    32 					; PCOLR3 (Black)
    33 25F6 00				.byte %00000000
    34 25F7 00				.byte %00000000
    35 25F8 14				.byte %00010100
    36 25F9 00				.byte %00000000
    37 25FA 00				.byte %00000000
    38 25FB 00				.byte %00000000
    39 25FC 00				.byte %00000000
    40 25FD 24				.byte %00100100
   369 25FE				icl 'map.asm'
Source: map.asm
     1 25FE			    org map
     2 				     
     3 3000-3960> 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     4 3031 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     5 3062 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     6 3093 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     7 30C4 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     8 30F5 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
     9 3126 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    10 3157 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    11 3188 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    12 31B9 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    13 31EA 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    14 321B 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    15 324C 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    16 327D 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    17 32AE 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    18 32DF 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    19 3310 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    20 3341 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    21 3372 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    22 33A3 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    23 33D4 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    24 3405 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    25 3436 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    26 3467 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    27 3498 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    28 34C9 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    29 34FA 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    30 352B 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    31 355C 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    32 358D 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    33 35BE 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    34 35EF 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    35 3620 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    36 3651 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    37 3682 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    38 36B3 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    39 36E4 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    40 3715 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    41 3746 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    42 3777 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1
    43 37A8 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    44 37D9 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    45 380A 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    46 383B 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    47 386C 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    48 389D 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    49 38CE 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    50 38FF 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
    51 3930 01 01 01 01 01 01 +      .byte 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
   370 3961				icl 'gfx.asm'
Source: gfx.asm
     1 3961				org charset
     2 					; char 0
     3 4000-43FF> 00			.byte %00000000
     4 4001 00				.byte %00000000
     5 4002 00				.byte %00000000
     6 4003 00				.byte %00000000
     7 4004 00				.byte %00000000
     8 4005 00				.byte %00000000
     9 4006 00				.byte %00000000
    10 4007 00				.byte %00000000
    11 					; char 1
    12 4008 00				.byte %00000000
    13 4009 00				.byte %00000000
    14 400A 00				.byte %00000000
    15 400B 00				.byte %00000000
    16 400C 00				.byte %00000000
    17 400D 00				.byte %00000000
    18 400E 00				.byte %00000000
    19 400F 00				.byte %00000000
    20 					; char 2
    21 4010 AA				.byte %10101010
    22 4011 A5				.byte %10100101
    23 4012 55				.byte %01010101
    24 4013 00				.byte %00000000
    25 4014 52				.byte %01010010
    26 4015 52				.byte %01010010
    27 4016 52				.byte %01010010
    28 4017 00				.byte %00000000
    29 					; char 3
    30 4018 4A				.byte %01001010
    31 4019 4A				.byte %01001010
    32 401A 49				.byte %01001001
    33 401B 00				.byte %00000000
    34 401C A9				.byte %10101001
    35 401D 95				.byte %10010101
    36 401E 55				.byte %01010101
    37 401F 00				.byte %00000000
    38 					; char 4
    39 4020 92				.byte %10010010
    40 4021 24				.byte %00100100
    41 4022 49				.byte %01001001
    42 4023 92				.byte %10010010
    43 4024 24				.byte %00100100
    44 4025 49				.byte %01001001
    45 4026 92				.byte %10010010
    46 4027 24				.byte %00100100
    47 					; char 5
    48 4028 49				.byte %01001001
    49 4029 92				.byte %10010010
    50 402A 24				.byte %00100100
    51 402B 49				.byte %01001001
    52 402C 92				.byte %10010010
    53 402D 24				.byte %00100100
    54 402E 49				.byte %01001001
    55 402F 92				.byte %10010010
    56 					; char 6
    57 4030 5F				.byte %01011111
    58 4031 7F				.byte %01111111
    59 4032 7C				.byte %01111100
    60 4033 7C				.byte %01111100
    61 4034 7F				.byte %01111111
    62 4035 7F				.byte %01111111
    63 4036 7F				.byte %01111111
    64 4037 7F				.byte %01111111
    65 					; char 7
    66 4038 F5				.byte %11110101
    67 4039 FD				.byte %11111101
    68 403A 3D				.byte %00111101
    69 403B 3D				.byte %00111101
    70 403C FD				.byte %11111101
    71 403D CD				.byte %11001101
    72 403E FD				.byte %11111101
    73 403F FD				.byte %11111101
    74 					; char 8
    75 4040 00				.byte %00000000
    76 4041 00				.byte %00000000
    77 4042 00				.byte %00000000
    78 4043 02				.byte %00000010
    79 4044 0A				.byte %00001010
    80 4045 29				.byte %00101001
    81 4046 A5				.byte %10100101
    82 4047 95				.byte %10010101
    83 					; char 9
    84 4048 0A				.byte %00001010
    85 4049 29				.byte %00101001
    86 404A A5				.byte %10100101
    87 404B 95				.byte %10010101
    88 404C 55				.byte %01010101
    89 404D 55				.byte %01010101
    90 404E 55				.byte %01010101
    91 404F 55				.byte %01010101
    92 					; char 10
    93 4050 A0				.byte %10100000
    94 4051 68				.byte %01101000
    95 4052 5A				.byte %01011010
    96 4053 56				.byte %01010110
    97 4054 55				.byte %01010101
    98 4055 55				.byte %01010101
    99 4056 55				.byte %01010101
   100 4057 55				.byte %01010101
   101 					; char 11
   102 4058 00				.byte %00000000
   103 4059 00				.byte %00000000
   104 405A 00				.byte %00000000
   105 405B 80				.byte %10000000
   106 405C A0				.byte %10100000
   107 405D 68				.byte %01101000
   108 405E 5A				.byte %01011010
   109 405F 56				.byte %01010110
   110 					; char 12
   111 4060 00				.byte %00000000
   112 4061 00				.byte %00000000
   113 4062 00				.byte %00000000
   114 4063 00				.byte %00000000
   115 4064 00				.byte %00000000
   116 4065 00				.byte %00000000
   117 4066 00				.byte %00000000
   118 4067 00				.byte %00000000
   119 					; char 13
   120 4068 00				.byte %00000000
   121 4069 00				.byte %00000000
   122 406A 00				.byte %00000000
   123 406B 00				.byte %00000000
   124 406C 00				.byte %00000000
   125 406D 00				.byte %00000000
   126 406E 00				.byte %00000000
   127 406F 00				.byte %00000000
   128 					; char 14
   129 4070 00				.byte %00000000
   130 4071 00				.byte %00000000
   131 4072 00				.byte %00000000
   132 4073 00				.byte %00000000
   133 4074 00				.byte %00000000
   134 4075 00				.byte %00000000
   135 4076 00				.byte %00000000
   136 4077 00				.byte %00000000
   137 					; char 15
   138 4078 00				.byte %00000000
   139 4079 00				.byte %00000000
   140 407A 00				.byte %00000000
   141 407B 00				.byte %00000000
   142 407C 00				.byte %00000000
   143 407D 00				.byte %00000000
   144 407E 00				.byte %00000000
   145 407F 00				.byte %00000000
   146 					; char 16
   147 4080 00				.byte %00000000
   148 4081 00				.byte %00000000
   149 4082 00				.byte %00000000
   150 4083 00				.byte %00000000
   151 4084 00				.byte %00000000
   152 4085 00				.byte %00000000
   153 4086 00				.byte %00000000
   154 4087 00				.byte %00000000
   155 					; char 17
   156 4088 00				.byte %00000000
   157 4089 00				.byte %00000000
   158 408A 00				.byte %00000000
   159 408B 00				.byte %00000000
   160 408C 00				.byte %00000000
   161 408D 00				.byte %00000000
   162 408E 00				.byte %00000000
   163 408F 00				.byte %00000000
   164 					; char 18
   165 4090 00				.byte %00000000
   166 4091 00				.byte %00000000
   167 4092 00				.byte %00000000
   168 4093 00				.byte %00000000
   169 4094 00				.byte %00000000
   170 4095 00				.byte %00000000
   171 4096 00				.byte %00000000
   172 4097 00				.byte %00000000
   173 					; char 19
   174 4098 00				.byte %00000000
   175 4099 00				.byte %00000000
   176 409A 00				.byte %00000000
   177 409B 00				.byte %00000000
   178 409C 00				.byte %00000000
   179 409D 00				.byte %00000000
   180 409E 00				.byte %00000000
   181 409F 00				.byte %00000000
   182 					; char 20
   183 40A0 00				.byte %00000000
   184 40A1 00				.byte %00000000
   185 40A2 00				.byte %00000000
   186 40A3 00				.byte %00000000
   187 40A4 00				.byte %00000000
   188 40A5 00				.byte %00000000
   189 40A6 00				.byte %00000000
   190 40A7 00				.byte %00000000
   191 					; char 21
   192 40A8 00				.byte %00000000
   193 40A9 00				.byte %00000000
   194 40AA 00				.byte %00000000
   195 40AB 00				.byte %00000000
   196 40AC 00				.byte %00000000
   197 40AD 00				.byte %00000000
   198 40AE 00				.byte %00000000
   199 40AF 00				.byte %00000000
   200 					; char 22
   201 40B0 00				.byte %00000000
   202 40B1 00				.byte %00000000
   203 40B2 00				.byte %00000000
   204 40B3 00				.byte %00000000
   205 40B4 00				.byte %00000000
   206 40B5 00				.byte %00000000
   207 40B6 00				.byte %00000000
   208 40B7 00				.byte %00000000
   209 					; char 23
   210 40B8 00				.byte %00000000
   211 40B9 00				.byte %00000000
   212 40BA 00				.byte %00000000
   213 40BB 00				.byte %00000000
   214 40BC 00				.byte %00000000
   215 40BD 00				.byte %00000000
   216 40BE 00				.byte %00000000
   217 40BF 00				.byte %00000000
   218 					; char 24
   219 40C0 00				.byte %00000000
   220 40C1 00				.byte %00000000
   221 40C2 00				.byte %00000000
   222 40C3 00				.byte %00000000
   223 40C4 00				.byte %00000000
   224 40C5 00				.byte %00000000
   225 40C6 00				.byte %00000000
   226 40C7 00				.byte %00000000
   227 					; char 25
   228 40C8 00				.byte %00000000
   229 40C9 00				.byte %00000000
   230 40CA 00				.byte %00000000
   231 40CB 00				.byte %00000000
   232 40CC 00				.byte %00000000
   233 40CD 00				.byte %00000000
   234 40CE 00				.byte %00000000
   235 40CF 00				.byte %00000000
   236 					; char 26
   237 40D0 00				.byte %00000000
   238 40D1 00				.byte %00000000
   239 40D2 00				.byte %00000000
   240 40D3 00				.byte %00000000
   241 40D4 00				.byte %00000000
   242 40D5 00				.byte %00000000
   243 40D6 00				.byte %00000000
   244 40D7 00				.byte %00000000
   245 					; char 27
   246 40D8 00				.byte %00000000
   247 40D9 00				.byte %00000000
   248 40DA 00				.byte %00000000
   249 40DB 00				.byte %00000000
   250 40DC 00				.byte %00000000
   251 40DD 00				.byte %00000000
   252 40DE 00				.byte %00000000
   253 40DF 00				.byte %00000000
   254 					; char 28
   255 40E0 00				.byte %00000000
   256 40E1 00				.byte %00000000
   257 40E2 00				.byte %00000000
   258 40E3 00				.byte %00000000
   259 40E4 00				.byte %00000000
   260 40E5 00				.byte %00000000
   261 40E6 00				.byte %00000000
   262 40E7 00				.byte %00000000
   263 					; char 29
   264 40E8 00				.byte %00000000
   265 40E9 00				.byte %00000000
   266 40EA 00				.byte %00000000
   267 40EB 00				.byte %00000000
   268 40EC 00				.byte %00000000
   269 40ED 00				.byte %00000000
   270 40EE 00				.byte %00000000
   271 40EF 00				.byte %00000000
   272 					; char 30
   273 40F0 00				.byte %00000000
   274 40F1 00				.byte %00000000
   275 40F2 00				.byte %00000000
   276 40F3 00				.byte %00000000
   277 40F4 00				.byte %00000000
   278 40F5 00				.byte %00000000
   279 40F6 00				.byte %00000000
   280 40F7 00				.byte %00000000
   281 					; char 31
   282 40F8 00				.byte %00000000
   283 40F9 00				.byte %00000000
   284 40FA 00				.byte %00000000
   285 40FB 00				.byte %00000000
   286 40FC 00				.byte %00000000
   287 40FD 00				.byte %00000000
   288 40FE 00				.byte %00000000
   289 40FF 00				.byte %00000000
   290 					; char 32
   291 4100 00				.byte %00000000
   292 4101 00				.byte %00000000
   293 4102 00				.byte %00000000
   294 4103 00				.byte %00000000
   295 4104 00				.byte %00000000
   296 4105 00				.byte %00000000
   297 4106 00				.byte %00000000
   298 4107 00				.byte %00000000
   299 					; char 33
   300 4108 00				.byte %00000000
   301 4109 00				.byte %00000000
   302 410A 00				.byte %00000000
   303 410B 00				.byte %00000000
   304 410C 00				.byte %00000000
   305 410D 00				.byte %00000000
   306 410E 00				.byte %00000000
   307 410F 00				.byte %00000000
   308 					; char 34
   309 4110 00				.byte %00000000
   310 4111 00				.byte %00000000
   311 4112 00				.byte %00000000
   312 4113 00				.byte %00000000
   313 4114 00				.byte %00000000
   314 4115 00				.byte %00000000
   315 4116 00				.byte %00000000
   316 4117 00				.byte %00000000
   317 					; char 35
   318 4118 00				.byte %00000000
   319 4119 00				.byte %00000000
   320 411A 00				.byte %00000000
   321 411B 00				.byte %00000000
   322 411C 00				.byte %00000000
   323 411D 00				.byte %00000000
   324 411E 00				.byte %00000000
   325 411F 00				.byte %00000000
   326 					; char 36
   327 4120 00				.byte %00000000
   328 4121 00				.byte %00000000
   329 4122 00				.byte %00000000
   330 4123 00				.byte %00000000
   331 4124 00				.byte %00000000
   332 4125 00				.byte %00000000
   333 4126 00				.byte %00000000
   334 4127 00				.byte %00000000
   335 					; char 37
   336 4128 00				.byte %00000000
   337 4129 00				.byte %00000000
   338 412A 00				.byte %00000000
   339 412B 00				.byte %00000000
   340 412C 00				.byte %00000000
   341 412D 00				.byte %00000000
   342 412E 00				.byte %00000000
   343 412F 00				.byte %00000000
   344 					; char 38
   345 4130 00				.byte %00000000
   346 4131 00				.byte %00000000
   347 4132 00				.byte %00000000
   348 4133 00				.byte %00000000
   349 4134 00				.byte %00000000
   350 4135 00				.byte %00000000
   351 4136 00				.byte %00000000
   352 4137 00				.byte %00000000
   353 					; char 39
   354 4138 00				.byte %00000000
   355 4139 00				.byte %00000000
   356 413A 00				.byte %00000000
   357 413B 00				.byte %00000000
   358 413C 00				.byte %00000000
   359 413D 00				.byte %00000000
   360 413E 00				.byte %00000000
   361 413F 00				.byte %00000000
   362 					; char 40
   363 4140 00				.byte %00000000
   364 4141 00				.byte %00000000
   365 4142 00				.byte %00000000
   366 4143 00				.byte %00000000
   367 4144 00				.byte %00000000
   368 4145 00				.byte %00000000
   369 4146 00				.byte %00000000
   370 4147 00				.byte %00000000
   371 					; char 41
   372 4148 00				.byte %00000000
   373 4149 00				.byte %00000000
   374 414A 00				.byte %00000000
   375 414B 00				.byte %00000000
   376 414C 00				.byte %00000000
   377 414D 00				.byte %00000000
   378 414E 00				.byte %00000000
   379 414F 00				.byte %00000000
   380 					; char 42
   381 4150 00				.byte %00000000
   382 4151 00				.byte %00000000
   383 4152 00				.byte %00000000
   384 4153 00				.byte %00000000
   385 4154 00				.byte %00000000
   386 4155 00				.byte %00000000
   387 4156 00				.byte %00000000
   388 4157 00				.byte %00000000
   389 					; char 43
   390 4158 00				.byte %00000000
   391 4159 00				.byte %00000000
   392 415A 00				.byte %00000000
   393 415B 00				.byte %00000000
   394 415C 00				.byte %00000000
   395 415D 00				.byte %00000000
   396 415E 00				.byte %00000000
   397 415F 00				.byte %00000000
   398 					; char 44
   399 4160 00				.byte %00000000
   400 4161 00				.byte %00000000
   401 4162 00				.byte %00000000
   402 4163 00				.byte %00000000
   403 4164 00				.byte %00000000
   404 4165 00				.byte %00000000
   405 4166 00				.byte %00000000
   406 4167 00				.byte %00000000
   407 					; char 45
   408 4168 00				.byte %00000000
   409 4169 00				.byte %00000000
   410 416A 00				.byte %00000000
   411 416B 00				.byte %00000000
   412 416C 00				.byte %00000000
   413 416D 00				.byte %00000000
   414 416E 00				.byte %00000000
   415 416F 00				.byte %00000000
   416 					; char 46
   417 4170 00				.byte %00000000
   418 4171 00				.byte %00000000
   419 4172 00				.byte %00000000
   420 4173 00				.byte %00000000
   421 4174 00				.byte %00000000
   422 4175 00				.byte %00000000
   423 4176 00				.byte %00000000
   424 4177 00				.byte %00000000
   425 					; char 47
   426 4178 00				.byte %00000000
   427 4179 00				.byte %00000000
   428 417A 00				.byte %00000000
   429 417B 00				.byte %00000000
   430 417C 00				.byte %00000000
   431 417D 00				.byte %00000000
   432 417E 00				.byte %00000000
   433 417F 00				.byte %00000000
   434 					; char 48
   435 4180 00				.byte %00000000
   436 4181 00				.byte %00000000
   437 4182 00				.byte %00000000
   438 4183 00				.byte %00000000
   439 4184 00				.byte %00000000
   440 4185 00				.byte %00000000
   441 4186 00				.byte %00000000
   442 4187 00				.byte %00000000
   443 					; char 49
   444 4188 00				.byte %00000000
   445 4189 00				.byte %00000000
   446 418A 00				.byte %00000000
   447 418B 00				.byte %00000000
   448 418C 00				.byte %00000000
   449 418D 00				.byte %00000000
   450 418E 00				.byte %00000000
   451 418F 00				.byte %00000000
   452 					; char 50
   453 4190 00				.byte %00000000
   454 4191 00				.byte %00000000
   455 4192 00				.byte %00000000
   456 4193 00				.byte %00000000
   457 4194 00				.byte %00000000
   458 4195 00				.byte %00000000
   459 4196 00				.byte %00000000
   460 4197 00				.byte %00000000
   461 					; char 51
   462 4198 00				.byte %00000000
   463 4199 00				.byte %00000000
   464 419A 00				.byte %00000000
   465 419B 00				.byte %00000000
   466 419C 00				.byte %00000000
   467 419D 00				.byte %00000000
   468 419E 00				.byte %00000000
   469 419F 00				.byte %00000000
   470 					; char 52
   471 41A0 00				.byte %00000000
   472 41A1 00				.byte %00000000
   473 41A2 00				.byte %00000000
   474 41A3 00				.byte %00000000
   475 41A4 00				.byte %00000000
   476 41A5 00				.byte %00000000
   477 41A6 00				.byte %00000000
   478 41A7 00				.byte %00000000
   479 					; char 53
   480 41A8 00				.byte %00000000
   481 41A9 00				.byte %00000000
   482 41AA 00				.byte %00000000
   483 41AB 00				.byte %00000000
   484 41AC 00				.byte %00000000
   485 41AD 00				.byte %00000000
   486 41AE 00				.byte %00000000
   487 41AF 00				.byte %00000000
   488 					; char 54
   489 41B0 00				.byte %00000000
   490 41B1 00				.byte %00000000
   491 41B2 00				.byte %00000000
   492 41B3 00				.byte %00000000
   493 41B4 00				.byte %00000000
   494 41B5 00				.byte %00000000
   495 41B6 00				.byte %00000000
   496 41B7 00				.byte %00000000
   497 					; char 55
   498 41B8 00				.byte %00000000
   499 41B9 00				.byte %00000000
   500 41BA 00				.byte %00000000
   501 41BB 00				.byte %00000000
   502 41BC 00				.byte %00000000
   503 41BD 00				.byte %00000000
   504 41BE 00				.byte %00000000
   505 41BF 00				.byte %00000000
   506 					; char 56
   507 41C0 00				.byte %00000000
   508 41C1 00				.byte %00000000
   509 41C2 00				.byte %00000000
   510 41C3 00				.byte %00000000
   511 41C4 00				.byte %00000000
   512 41C5 00				.byte %00000000
   513 41C6 00				.byte %00000000
   514 41C7 00				.byte %00000000
   515 					; char 57
   516 41C8 00				.byte %00000000
   517 41C9 00				.byte %00000000
   518 41CA 00				.byte %00000000
   519 41CB 00				.byte %00000000
   520 41CC 00				.byte %00000000
   521 41CD 00				.byte %00000000
   522 41CE 00				.byte %00000000
   523 41CF 00				.byte %00000000
   524 					; char 58
   525 41D0 00				.byte %00000000
   526 41D1 00				.byte %00000000
   527 41D2 00				.byte %00000000
   528 41D3 00				.byte %00000000
   529 41D4 00				.byte %00000000
   530 41D5 00				.byte %00000000
   531 41D6 00				.byte %00000000
   532 41D7 00				.byte %00000000
   533 					; char 59
   534 41D8 00				.byte %00000000
   535 41D9 00				.byte %00000000
   536 41DA 00				.byte %00000000
   537 41DB 00				.byte %00000000
   538 41DC 00				.byte %00000000
   539 41DD 00				.byte %00000000
   540 41DE 00				.byte %00000000
   541 41DF 00				.byte %00000000
   542 					; char 60
   543 41E0 00				.byte %00000000
   544 41E1 00				.byte %00000000
   545 41E2 00				.byte %00000000
   546 41E3 00				.byte %00000000
   547 41E4 00				.byte %00000000
   548 41E5 00				.byte %00000000
   549 41E6 00				.byte %00000000
   550 41E7 00				.byte %00000000
   551 					; char 61
   552 41E8 00				.byte %00000000
   553 41E9 00				.byte %00000000
   554 41EA 00				.byte %00000000
   555 41EB 00				.byte %00000000
   556 41EC 00				.byte %00000000
   557 41ED 00				.byte %00000000
   558 41EE 00				.byte %00000000
   559 41EF 00				.byte %00000000
   560 					; char 62
   561 41F0 00				.byte %00000000
   562 41F1 00				.byte %00000000
   563 41F2 00				.byte %00000000
   564 41F3 00				.byte %00000000
   565 41F4 00				.byte %00000000
   566 41F5 00				.byte %00000000
   567 41F6 00				.byte %00000000
   568 41F7 00				.byte %00000000
   569 					; char 63
   570 41F8 00				.byte %00000000
   571 41F9 00				.byte %00000000
   572 41FA 00				.byte %00000000
   573 41FB 00				.byte %00000000
   574 41FC 00				.byte %00000000
   575 41FD 00				.byte %00000000
   576 41FE 00				.byte %00000000
   577 41FF 00				.byte %00000000
   578 					; char 64
   579 4200 00				.byte %00000000
   580 4201 00				.byte %00000000
   581 4202 00				.byte %00000000
   582 4203 00				.byte %00000000
   583 4204 00				.byte %00000000
   584 4205 00				.byte %00000000
   585 4206 00				.byte %00000000
   586 4207 00				.byte %00000000
   587 					; char 65
   588 4208 00				.byte %00000000
   589 4209 00				.byte %00000000
   590 420A 00				.byte %00000000
   591 420B 00				.byte %00000000
   592 420C 00				.byte %00000000
   593 420D 00				.byte %00000000
   594 420E 00				.byte %00000000
   595 420F 00				.byte %00000000
   596 					; char 66
   597 4210 00				.byte %00000000
   598 4211 00				.byte %00000000
   599 4212 00				.byte %00000000
   600 4213 00				.byte %00000000
   601 4214 00				.byte %00000000
   602 4215 00				.byte %00000000
   603 4216 00				.byte %00000000
   604 4217 00				.byte %00000000
   605 					; char 67
   606 4218 00				.byte %00000000
   607 4219 00				.byte %00000000
   608 421A 00				.byte %00000000
   609 421B 00				.byte %00000000
   610 421C 00				.byte %00000000
   611 421D 00				.byte %00000000
   612 421E 00				.byte %00000000
   613 421F 00				.byte %00000000
   614 					; char 68
   615 4220 00				.byte %00000000
   616 4221 00				.byte %00000000
   617 4222 00				.byte %00000000
   618 4223 00				.byte %00000000
   619 4224 00				.byte %00000000
   620 4225 00				.byte %00000000
   621 4226 00				.byte %00000000
   622 4227 00				.byte %00000000
   623 					; char 69
   624 4228 00				.byte %00000000
   625 4229 00				.byte %00000000
   626 422A 00				.byte %00000000
   627 422B 00				.byte %00000000
   628 422C 00				.byte %00000000
   629 422D 00				.byte %00000000
   630 422E 00				.byte %00000000
   631 422F 00				.byte %00000000
   632 					; char 70
   633 4230 00				.byte %00000000
   634 4231 00				.byte %00000000
   635 4232 00				.byte %00000000
   636 4233 00				.byte %00000000
   637 4234 00				.byte %00000000
   638 4235 00				.byte %00000000
   639 4236 00				.byte %00000000
   640 4237 00				.byte %00000000
   641 					; char 71
   642 4238 00				.byte %00000000
   643 4239 00				.byte %00000000
   644 423A 00				.byte %00000000
   645 423B 00				.byte %00000000
   646 423C 00				.byte %00000000
   647 423D 00				.byte %00000000
   648 423E 00				.byte %00000000
   649 423F 00				.byte %00000000
   650 					; char 72
   651 4240 00				.byte %00000000
   652 4241 00				.byte %00000000
   653 4242 00				.byte %00000000
   654 4243 00				.byte %00000000
   655 4244 00				.byte %00000000
   656 4245 00				.byte %00000000
   657 4246 00				.byte %00000000
   658 4247 00				.byte %00000000
   659 					; char 73
   660 4248 00				.byte %00000000
   661 4249 00				.byte %00000000
   662 424A 00				.byte %00000000
   663 424B 00				.byte %00000000
   664 424C 00				.byte %00000000
   665 424D 00				.byte %00000000
   666 424E 00				.byte %00000000
   667 424F 00				.byte %00000000
   668 					; char 74
   669 4250 00				.byte %00000000
   670 4251 00				.byte %00000000
   671 4252 00				.byte %00000000
   672 4253 00				.byte %00000000
   673 4254 00				.byte %00000000
   674 4255 00				.byte %00000000
   675 4256 00				.byte %00000000
   676 4257 00				.byte %00000000
   677 					; char 75
   678 4258 00				.byte %00000000
   679 4259 00				.byte %00000000
   680 425A 00				.byte %00000000
   681 425B 00				.byte %00000000
   682 425C 00				.byte %00000000
   683 425D 00				.byte %00000000
   684 425E 00				.byte %00000000
   685 425F 00				.byte %00000000
   686 					; char 76
   687 4260 00				.byte %00000000
   688 4261 00				.byte %00000000
   689 4262 00				.byte %00000000
   690 4263 00				.byte %00000000
   691 4264 00				.byte %00000000
   692 4265 00				.byte %00000000
   693 4266 00				.byte %00000000
   694 4267 00				.byte %00000000
   695 					; char 77
   696 4268 00				.byte %00000000
   697 4269 00				.byte %00000000
   698 426A 00				.byte %00000000
   699 426B 00				.byte %00000000
   700 426C 00				.byte %00000000
   701 426D 00				.byte %00000000
   702 426E 00				.byte %00000000
   703 426F 00				.byte %00000000
   704 					; char 78
   705 4270 00				.byte %00000000
   706 4271 00				.byte %00000000
   707 4272 00				.byte %00000000
   708 4273 00				.byte %00000000
   709 4274 00				.byte %00000000
   710 4275 00				.byte %00000000
   711 4276 00				.byte %00000000
   712 4277 00				.byte %00000000
   713 					; char 79
   714 4278 00				.byte %00000000
   715 4279 00				.byte %00000000
   716 427A 00				.byte %00000000
   717 427B 00				.byte %00000000
   718 427C 00				.byte %00000000
   719 427D 00				.byte %00000000
   720 427E 00				.byte %00000000
   721 427F 00				.byte %00000000
   722 					; char 80
   723 4280 00				.byte %00000000
   724 4281 00				.byte %00000000
   725 4282 00				.byte %00000000
   726 4283 00				.byte %00000000
   727 4284 00				.byte %00000000
   728 4285 00				.byte %00000000
   729 4286 00				.byte %00000000
   730 4287 00				.byte %00000000
   731 					; char 81
   732 4288 00				.byte %00000000
   733 4289 00				.byte %00000000
   734 428A 00				.byte %00000000
   735 428B 00				.byte %00000000
   736 428C 00				.byte %00000000
   737 428D 00				.byte %00000000
   738 428E 00				.byte %00000000
   739 428F 00				.byte %00000000
   740 					; char 82
   741 4290 00				.byte %00000000
   742 4291 00				.byte %00000000
   743 4292 00				.byte %00000000
   744 4293 00				.byte %00000000
   745 4294 00				.byte %00000000
   746 4295 00				.byte %00000000
   747 4296 00				.byte %00000000
   748 4297 00				.byte %00000000
   749 					; char 83
   750 4298 00				.byte %00000000
   751 4299 00				.byte %00000000
   752 429A 00				.byte %00000000
   753 429B 00				.byte %00000000
   754 429C 00				.byte %00000000
   755 429D 00				.byte %00000000
   756 429E 00				.byte %00000000
   757 429F 00				.byte %00000000
   758 					; char 84
   759 42A0 00				.byte %00000000
   760 42A1 00				.byte %00000000
   761 42A2 00				.byte %00000000
   762 42A3 00				.byte %00000000
   763 42A4 00				.byte %00000000
   764 42A5 00				.byte %00000000
   765 42A6 00				.byte %00000000
   766 42A7 00				.byte %00000000
   767 					; char 85
   768 42A8 00				.byte %00000000
   769 42A9 00				.byte %00000000
   770 42AA 00				.byte %00000000
   771 42AB 00				.byte %00000000
   772 42AC 00				.byte %00000000
   773 42AD 00				.byte %00000000
   774 42AE 00				.byte %00000000
   775 42AF 00				.byte %00000000
   776 					; char 86
   777 42B0 00				.byte %00000000
   778 42B1 00				.byte %00000000
   779 42B2 00				.byte %00000000
   780 42B3 00				.byte %00000000
   781 42B4 00				.byte %00000000
   782 42B5 00				.byte %00000000
   783 42B6 00				.byte %00000000
   784 42B7 00				.byte %00000000
   785 					; char 87
   786 42B8 00				.byte %00000000
   787 42B9 00				.byte %00000000
   788 42BA 00				.byte %00000000
   789 42BB 00				.byte %00000000
   790 42BC 00				.byte %00000000
   791 42BD 00				.byte %00000000
   792 42BE 00				.byte %00000000
   793 42BF 00				.byte %00000000
   794 					; char 88
   795 42C0 00				.byte %00000000
   796 42C1 00				.byte %00000000
   797 42C2 00				.byte %00000000
   798 42C3 00				.byte %00000000
   799 42C4 00				.byte %00000000
   800 42C5 00				.byte %00000000
   801 42C6 00				.byte %00000000
   802 42C7 00				.byte %00000000
   803 					; char 89
   804 42C8 00				.byte %00000000
   805 42C9 00				.byte %00000000
   806 42CA 00				.byte %00000000
   807 42CB 00				.byte %00000000
   808 42CC 00				.byte %00000000
   809 42CD 00				.byte %00000000
   810 42CE 00				.byte %00000000
   811 42CF 00				.byte %00000000
   812 					; char 90
   813 42D0 00				.byte %00000000
   814 42D1 00				.byte %00000000
   815 42D2 00				.byte %00000000
   816 42D3 00				.byte %00000000
   817 42D4 00				.byte %00000000
   818 42D5 00				.byte %00000000
   819 42D6 00				.byte %00000000
   820 42D7 00				.byte %00000000
   821 					; char 91
   822 42D8 00				.byte %00000000
   823 42D9 00				.byte %00000000
   824 42DA 00				.byte %00000000
   825 42DB 00				.byte %00000000
   826 42DC 00				.byte %00000000
   827 42DD 00				.byte %00000000
   828 42DE 00				.byte %00000000
   829 42DF 00				.byte %00000000
   830 					; char 92
   831 42E0 00				.byte %00000000
   832 42E1 00				.byte %00000000
   833 42E2 00				.byte %00000000
   834 42E3 00				.byte %00000000
   835 42E4 00				.byte %00000000
   836 42E5 00				.byte %00000000
   837 42E6 00				.byte %00000000
   838 42E7 00				.byte %00000000
   839 					; char 93
   840 42E8 00				.byte %00000000
   841 42E9 00				.byte %00000000
   842 42EA 00				.byte %00000000
   843 42EB 00				.byte %00000000
   844 42EC 00				.byte %00000000
   845 42ED 00				.byte %00000000
   846 42EE 00				.byte %00000000
   847 42EF 00				.byte %00000000
   848 					; char 94
   849 42F0 00				.byte %00000000
   850 42F1 00				.byte %00000000
   851 42F2 00				.byte %00000000
   852 42F3 00				.byte %00000000
   853 42F4 00				.byte %00000000
   854 42F5 00				.byte %00000000
   855 42F6 00				.byte %00000000
   856 42F7 00				.byte %00000000
   857 					; char 95
   858 42F8 00				.byte %00000000
   859 42F9 00				.byte %00000000
   860 42FA 00				.byte %00000000
   861 42FB 00				.byte %00000000
   862 42FC 00				.byte %00000000
   863 42FD 00				.byte %00000000
   864 42FE 00				.byte %00000000
   865 42FF 00				.byte %00000000
   866 					; char 96
   867 4300 00				.byte %00000000
   868 4301 00				.byte %00000000
   869 4302 00				.byte %00000000
   870 4303 00				.byte %00000000
   871 4304 00				.byte %00000000
   872 4305 00				.byte %00000000
   873 4306 00				.byte %00000000
   874 4307 00				.byte %00000000
   875 					; char 97
   876 4308 00				.byte %00000000
   877 4309 00				.byte %00000000
   878 430A 00				.byte %00000000
   879 430B 00				.byte %00000000
   880 430C 00				.byte %00000000
   881 430D 00				.byte %00000000
   882 430E 00				.byte %00000000
   883 430F 00				.byte %00000000
   884 					; char 98
   885 4310 00				.byte %00000000
   886 4311 00				.byte %00000000
   887 4312 00				.byte %00000000
   888 4313 00				.byte %00000000
   889 4314 00				.byte %00000000
   890 4315 00				.byte %00000000
   891 4316 00				.byte %00000000
   892 4317 00				.byte %00000000
   893 					; char 99
   894 4318 00				.byte %00000000
   895 4319 00				.byte %00000000
   896 431A 00				.byte %00000000
   897 431B 00				.byte %00000000
   898 431C 00				.byte %00000000
   899 431D 00				.byte %00000000
   900 431E 00				.byte %00000000
   901 431F 00				.byte %00000000
   902 					; char 100
   903 4320 00				.byte %00000000
   904 4321 00				.byte %00000000
   905 4322 00				.byte %00000000
   906 4323 00				.byte %00000000
   907 4324 00				.byte %00000000
   908 4325 00				.byte %00000000
   909 4326 00				.byte %00000000
   910 4327 00				.byte %00000000
   911 					; char 101
   912 4328 00				.byte %00000000
   913 4329 00				.byte %00000000
   914 432A 00				.byte %00000000
   915 432B 00				.byte %00000000
   916 432C 00				.byte %00000000
   917 432D 00				.byte %00000000
   918 432E 00				.byte %00000000
   919 432F 00				.byte %00000000
   920 					; char 102
   921 4330 00				.byte %00000000
   922 4331 00				.byte %00000000
   923 4332 00				.byte %00000000
   924 4333 00				.byte %00000000
   925 4334 00				.byte %00000000
   926 4335 00				.byte %00000000
   927 4336 00				.byte %00000000
   928 4337 00				.byte %00000000
   929 					; char 103
   930 4338 00				.byte %00000000
   931 4339 00				.byte %00000000
   932 433A 00				.byte %00000000
   933 433B 00				.byte %00000000
   934 433C 00				.byte %00000000
   935 433D 00				.byte %00000000
   936 433E 00				.byte %00000000
   937 433F 00				.byte %00000000
   938 					; char 104
   939 4340 00				.byte %00000000
   940 4341 00				.byte %00000000
   941 4342 00				.byte %00000000
   942 4343 00				.byte %00000000
   943 4344 00				.byte %00000000
   944 4345 00				.byte %00000000
   945 4346 00				.byte %00000000
   946 4347 00				.byte %00000000
   947 					; char 105
   948 4348 00				.byte %00000000
   949 4349 00				.byte %00000000
   950 434A 00				.byte %00000000
   951 434B 00				.byte %00000000
   952 434C 00				.byte %00000000
   953 434D 00				.byte %00000000
   954 434E 00				.byte %00000000
   955 434F 00				.byte %00000000
   956 					; char 106
   957 4350 00				.byte %00000000
   958 4351 00				.byte %00000000
   959 4352 00				.byte %00000000
   960 4353 00				.byte %00000000
   961 4354 00				.byte %00000000
   962 4355 00				.byte %00000000
   963 4356 00				.byte %00000000
   964 4357 00				.byte %00000000
   965 					; char 107
   966 4358 00				.byte %00000000
   967 4359 00				.byte %00000000
   968 435A 00				.byte %00000000
   969 435B 00				.byte %00000000
   970 435C 00				.byte %00000000
   971 435D 00				.byte %00000000
   972 435E 00				.byte %00000000
   973 435F 00				.byte %00000000
   974 					; char 108
   975 4360 00				.byte %00000000
   976 4361 00				.byte %00000000
   977 4362 00				.byte %00000000
   978 4363 00				.byte %00000000
   979 4364 00				.byte %00000000
   980 4365 00				.byte %00000000
   981 4366 00				.byte %00000000
   982 4367 00				.byte %00000000
   983 					; char 109
   984 4368 00				.byte %00000000
   985 4369 00				.byte %00000000
   986 436A 00				.byte %00000000
   987 436B 00				.byte %00000000
   988 436C 00				.byte %00000000
   989 436D 00				.byte %00000000
   990 436E 00				.byte %00000000
   991 436F 00				.byte %00000000
   992 					; char 110
   993 4370 00				.byte %00000000
   994 4371 00				.byte %00000000
   995 4372 00				.byte %00000000
   996 4373 00				.byte %00000000
   997 4374 00				.byte %00000000
   998 4375 00				.byte %00000000
   999 4376 00				.byte %00000000
  1000 4377 00				.byte %00000000
  1001 					; char 111
  1002 4378 00				.byte %00000000
  1003 4379 00				.byte %00000000
  1004 437A 00				.byte %00000000
  1005 437B 00				.byte %00000000
  1006 437C 00				.byte %00000000
  1007 437D 00				.byte %00000000
  1008 437E 00				.byte %00000000
  1009 437F 00				.byte %00000000
  1010 					; char 112
  1011 4380 00				.byte %00000000
  1012 4381 00				.byte %00000000
  1013 4382 00				.byte %00000000
  1014 4383 00				.byte %00000000
  1015 4384 00				.byte %00000000
  1016 4385 00				.byte %00000000
  1017 4386 00				.byte %00000000
  1018 4387 00				.byte %00000000
  1019 					; char 113
  1020 4388 00				.byte %00000000
  1021 4389 00				.byte %00000000
  1022 438A 00				.byte %00000000
  1023 438B 00				.byte %00000000
  1024 438C 00				.byte %00000000
  1025 438D 00				.byte %00000000
  1026 438E 00				.byte %00000000
  1027 438F 00				.byte %00000000
  1028 					; char 114
  1029 4390 00				.byte %00000000
  1030 4391 00				.byte %00000000
  1031 4392 00				.byte %00000000
  1032 4393 00				.byte %00000000
  1033 4394 00				.byte %00000000
  1034 4395 00				.byte %00000000
  1035 4396 00				.byte %00000000
  1036 4397 00				.byte %00000000
  1037 					; char 115
  1038 4398 00				.byte %00000000
  1039 4399 00				.byte %00000000
  1040 439A 00				.byte %00000000
  1041 439B 00				.byte %00000000
  1042 439C 00				.byte %00000000
  1043 439D 00				.byte %00000000
  1044 439E 00				.byte %00000000
  1045 439F 00				.byte %00000000
  1046 					; char 116
  1047 43A0 00				.byte %00000000
  1048 43A1 00				.byte %00000000
  1049 43A2 00				.byte %00000000
  1050 43A3 00				.byte %00000000
  1051 43A4 00				.byte %00000000
  1052 43A5 00				.byte %00000000
  1053 43A6 00				.byte %00000000
  1054 43A7 00				.byte %00000000
  1055 					; char 117
  1056 43A8 00				.byte %00000000
  1057 43A9 00				.byte %00000000
  1058 43AA 00				.byte %00000000
  1059 43AB 00				.byte %00000000
  1060 43AC 00				.byte %00000000
  1061 43AD 00				.byte %00000000
  1062 43AE 00				.byte %00000000
  1063 43AF 00				.byte %00000000
  1064 					; char 118
  1065 43B0 00				.byte %00000000
  1066 43B1 00				.byte %00000000
  1067 43B2 00				.byte %00000000
  1068 43B3 00				.byte %00000000
  1069 43B4 00				.byte %00000000
  1070 43B5 00				.byte %00000000
  1071 43B6 00				.byte %00000000
  1072 43B7 00				.byte %00000000
  1073 					; char 119
  1074 43B8 00				.byte %00000000
  1075 43B9 00				.byte %00000000
  1076 43BA 00				.byte %00000000
  1077 43BB 00				.byte %00000000
  1078 43BC 00				.byte %00000000
  1079 43BD 00				.byte %00000000
  1080 43BE 00				.byte %00000000
  1081 43BF 00				.byte %00000000
  1082 					; char 120
  1083 43C0 00				.byte %00000000
  1084 43C1 00				.byte %00000000
  1085 43C2 00				.byte %00000000
  1086 43C3 00				.byte %00000000
  1087 43C4 00				.byte %00000000
  1088 43C5 00				.byte %00000000
  1089 43C6 00				.byte %00000000
  1090 43C7 00				.byte %00000000
  1091 					; char 121
  1092 43C8 00				.byte %00000000
  1093 43C9 00				.byte %00000000
  1094 43CA 00				.byte %00000000
  1095 43CB 00				.byte %00000000
  1096 43CC 00				.byte %00000000
  1097 43CD 00				.byte %00000000
  1098 43CE 00				.byte %00000000
  1099 43CF 00				.byte %00000000
  1100 					; char 122
  1101 43D0 00				.byte %00000000
  1102 43D1 00				.byte %00000000
  1103 43D2 00				.byte %00000000
  1104 43D3 00				.byte %00000000
  1105 43D4 00				.byte %00000000
  1106 43D5 00				.byte %00000000
  1107 43D6 00				.byte %00000000
  1108 43D7 00				.byte %00000000
  1109 					; char 123
  1110 43D8 00				.byte %00000000
  1111 43D9 00				.byte %00000000
  1112 43DA 00				.byte %00000000
  1113 43DB 00				.byte %00000000
  1114 43DC 00				.byte %00000000
  1115 43DD 00				.byte %00000000
  1116 43DE 00				.byte %00000000
  1117 43DF 00				.byte %00000000
  1118 					; char 124
  1119 43E0 00				.byte %00000000
  1120 43E1 00				.byte %00000000
  1121 43E2 00				.byte %00000000
  1122 43E3 00				.byte %00000000
  1123 43E4 00				.byte %00000000
  1124 43E5 00				.byte %00000000
  1125 43E6 00				.byte %00000000
  1126 43E7 00				.byte %00000000
  1127 					; char 125
  1128 43E8 00				.byte %00000000
  1129 43E9 00				.byte %00000000
  1130 43EA 00				.byte %00000000
  1131 43EB 00				.byte %00000000
  1132 43EC 00				.byte %00000000
  1133 43ED 00				.byte %00000000
  1134 43EE 00				.byte %00000000
  1135 43EF 00				.byte %00000000
  1136 					; char 126
  1137 43F0 00				.byte %00000000
  1138 43F1 00				.byte %00000000
  1139 43F2 00				.byte %00000000
  1140 43F3 00				.byte %00000000
  1141 43F4 00				.byte %00000000
  1142 43F5 00				.byte %00000000
  1143 43F6 00				.byte %00000000
  1144 43F7 00				.byte %00000000
  1145 					; char 127
  1146 43F8 00				.byte %00000000
  1147 43F9 00				.byte %00000000
  1148 43FA 00				.byte %00000000
  1149 43FB 00				.byte %00000000
  1150 43FC 00				.byte %00000000
  1151 43FD 00				.byte %00000000
  1152 43FE 00				.byte %00000000
  1153 43FF 00				.byte %00000000
